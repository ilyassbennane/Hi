{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ILYASS BENNANE\\\\Desktop\\\\MERN\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_EMBED_API_KEY = \"AIzaSyDnH1CSsDOQz5BKD2forEe9oFpNQKgTFwA\"; // replace with your Google Maps Embed API key\n\nexport default function App() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [selectedRestaurant, setSelectedRestaurant] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/restaurants\").then(res => {\n      setRestaurants(res.data);\n    });\n  }, []);\n  const handleCitySelect = event => {\n    setSelectedCity(event.target.value);\n  };\n  const handleRestaurantSelect = event => {\n    setSelectedRestaurant(event.target.value);\n  };\n  useEffect(() => {\n    if (selectedCity) {\n      Axios.get(`http://localhost:3001/restaurants/${selectedCity}`).then(res => {\n        setRestaurants(res.data);\n      });\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    const selectedRestaurantData = restaurants.find(restaurant => restaurant.id === selectedRestaurant);\n    if (selectedRestaurantData) {\n      const mapUrl = `https://www.google.com/maps/embed/v1/place?key=${GOOGLE_MAPS_EMBED_API_KEY}&q=${encodeURIComponent(selectedRestaurantData.url)}`;\n      const mapFrame = document.getElementById(\"map-frame\");\n      mapFrame.src = mapUrl;\n    }\n  }, [selectedRestaurant, restaurants]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCity,\n      onChange: handleCitySelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Casablanca\",\n        children: \"Casablanca\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Tanger\",\n        children: \"Tanger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"El Jadida\",\n        children: \"El jadida\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRestaurant,\n      onChange: handleRestaurantSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: restaurant.id,\n        children: restaurant.title\n      }, restaurant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      id: \"map-frame\",\n      title: \"Map\",\n      width: \"600\",\n      height: \"450\",\n      frameBorder: \"0\",\n      style: {\n        border: 0\n      },\n      allowFullScreen: \"\",\n      \"aria-hidden\": \"false\",\n      tabIndex: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"eaS8hZTnadmhCYFHL2rZxkLPWmc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GOOGLE_MAPS_EMBED_API_KEY","App","_s","restaurants","setRestaurants","selectedCity","setSelectedCity","selectedRestaurant","setSelectedRestaurant","get","then","res","data","handleCitySelect","event","target","value","handleRestaurantSelect","selectedRestaurantData","find","restaurant","id","mapUrl","encodeURIComponent","url","mapFrame","document","getElementById","src","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","title","width","height","frameBorder","style","border","allowFullScreen","tabIndex","_c","$RefreshReg$"],"sources":["C:/Users/ILYASS BENNANE/Desktop/MERN/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst GOOGLE_MAPS_EMBED_API_KEY = \"AIzaSyDnH1CSsDOQz5BKD2forEe9oFpNQKgTFwA\"; // replace with your Google Maps Embed API key\n\nexport default function App() {\n  const [restaurants, setRestaurants] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [selectedRestaurant, setSelectedRestaurant] = useState(\"\");\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/restaurants\").then((res) => {\n      setRestaurants(res.data);\n    });\n  }, []);\n\n  const handleCitySelect = (event) => {\n    setSelectedCity(event.target.value);\n  };\n\n  const handleRestaurantSelect = (event) => {\n    setSelectedRestaurant(event.target.value);\n  };\n\n  useEffect(() => {\n    if (selectedCity) {\n      Axios.get(`http://localhost:3001/restaurants/${selectedCity}`).then(\n        (res) => {\n          setRestaurants(res.data);\n        }\n      );\n    }\n  }, [selectedCity]);\n\n  useEffect(() => {\n    const selectedRestaurantData = restaurants.find(\n      (restaurant) => restaurant.id === selectedRestaurant\n    );\n    if (selectedRestaurantData) {\n      const mapUrl = `https://www.google.com/maps/embed/v1/place?key=${GOOGLE_MAPS_EMBED_API_KEY}&q=${encodeURIComponent(\n        selectedRestaurantData.url\n      )}`;\n      const mapFrame = document.getElementById(\"map-frame\");\n      mapFrame.src = mapUrl;\n    }\n  }, [selectedRestaurant, restaurants]);\n\n  return (\n    <>\n      <select value={selectedCity} onChange={handleCitySelect}>\n        <option value=\"\">Select a city</option>\n        <option value=\"Casablanca\">Casablanca</option>\n        <option value=\"Tanger\">Tanger</option>\n        <option value=\"El Jadida\">El jadida</option>\n        {/* add more cities as needed */}\n      </select>\n\n      <select value={selectedRestaurant} onChange={handleRestaurantSelect}>\n        <option value=\"\">Select a restaurant</option>\n        {restaurants.map((restaurant) => (\n          <option value={restaurant.id} key={restaurant.id}>\n            {restaurant.title}\n          </option>\n        ))}\n      </select>\n\n      <iframe\n        id=\"map-frame\"\n        title=\"Map\"\n        width=\"600\"\n        height=\"450\"\n        frameBorder=\"0\"\n        style={{ border: 0 }}\n        allowFullScreen=\"\"\n        aria-hidden=\"false\"\n        tabIndex=\"0\"\n      ></iframe>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}